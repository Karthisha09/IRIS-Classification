# -*- coding: utf-8 -*-
"""Iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-TUPOQNb35CYPKtCiO-vAvKqnvYdsgFY
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('Iris.csv')
df

df.shape

df.columns=[1,2,3,4,5,6]
df.columns

sns.pairplot(df, hue=6, markers=["o", "s", "D"])
plt.suptitle("Pair Plot of Iris Dataset", y=1.02)
plt.show()

plt.figure(figsize=(10, 6))
sns.boxplot(x=6, y=2, data=df)
plt.title("Box Plot of Sepal Length by Species")
plt.show()

plt.figure(figsize=(10, 6))
sns.violinplot(x=6, y=5, data=df)
plt.title("Violin Plot of Petal Width by Species")
plt.show()

plt.figure(figsize=(8, 6))
correlation_matrix =df.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=.5)
plt.title("Correlation Heatmap of Iris Dataset Features")
plt.show()

plt.figure(figsize=(8, 6))
species_counts = df[6].value_counts()
species_counts.plot(kind='bar', color=['skyblue', 'lightcoral', 'lightgreen'])
plt.title("Number of Samples by Species")
plt.xlabel("Species")
plt.ylabel("Count")
plt.show()

print(df[6].value_counts())
x=df.iloc[:,1:5]
y=df.iloc[:,5]
print(x)
print('----------------------------------------------------')
y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0)
print("x_train")
print(x_train)
print('-------------------------------',x_train.shape)
print("x_test")
print(x_test)
print('-------------------------------',x_test.shape)
print("y_train")
print(y_train)
print('-------------------------------',y_train.shape)

from sklearn.neighbors import KNeighborsClassifier
knn= KNeighborsClassifier(n_neighbors=1)
knn.fit(x_train,y_train)
y_pred=knn.predict(x_test)

print(y_test)
print('--------------------------------')
y_pred

from sklearn.metrics import accuracy_score,confusion_matrix
print(confusion_matrix(y_test,y_pred))
accuracy=accuracy_score(y_test,y_pred)*100
print(accuracy)

x_new=np.array([[2.3,2.9,5.0,1.9]])
print(x_new)
y_new=knn.predict(x_new)
y_new

x_new=np.array([[1,2,1,2]])
print(x_new)
y_new=knn.predict(x_new)
y_new